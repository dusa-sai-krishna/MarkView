2025-08-16 05:50:47 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 05:50:47 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Starting SpringBootStarterTemplateApplication using Java 17.0.10 with PID 2028 (C:\Users\dsai9\Projects\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView)
2025-08-16 05:50:47 [restartedMain] DEBUG c.s.S.SpringBootStarterTemplateApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 05:50:47 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-16 05:50:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 05:50:47 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 05:50:49 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 05:50:49 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 128 ms. Found 2 JPA repository interfaces.
2025-08-16 05:50:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 05:50:51 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 05:50:51 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 05:50:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 05:50:51 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 05:50:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3558 ms
2025-08-16 05:50:51 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 05:50:51 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 05:50:51 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 05:50:51 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 05:50:52 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 05:50:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 05:50:53 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@75cd452f
2025-08-16 05:50:53 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 05:50:53 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 05:50:55 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 05:50:55 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 05:50:56 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 05:50:56 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 05:50:56 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 05:50:57 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 05:50:57 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 05:50:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 05:50:57 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Started SpringBootStarterTemplateApplication in 10.752 seconds (process running for 12.254)
2025-08-16 05:53:48 [http-nio-8080-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 05:53:48 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 05:53:48 [http-nio-8080-exec-3] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-16 05:53:48 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.multipart.MultipartException: Current request is not a multipart request] with root cause
org.springframework.web.multipart.MultipartException: Current request is not a multipart request
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:213)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:196)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:226)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:180)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.saiDeveloper.Spring_Boot_Starter_Template.config.JwtFilter.doFilterInternal(JwtFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-16 05:54:10 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.multipart.MultipartException: Current request is not a multipart request] with root cause
org.springframework.web.multipart.MultipartException: Current request is not a multipart request
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:213)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:196)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:226)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:180)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.saiDeveloper.Spring_Boot_Starter_Template.config.JwtFilter.doFilterInternal(JwtFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-16 05:55:57 [http-nio-8080-exec-6] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 05:55:57 [http-nio-8080-exec-6] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 06:00:32 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 06:00:32 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 06:00:32 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:00:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 06:00:32 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 06:00:44 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 06:00:44 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Starting SpringBootStarterTemplateApplication using Java 17.0.10 with PID 1968 (C:\Users\dsai9\Projects\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView)
2025-08-16 06:00:44 [restartedMain] DEBUG c.s.S.SpringBootStarterTemplateApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 06:00:44 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-16 06:00:45 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 06:00:45 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 06:00:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 06:00:46 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 138 ms. Found 2 JPA repository interfaces.
2025-08-16 06:00:48 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 06:00:48 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 06:00:48 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 06:00:48 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 06:00:48 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 06:00:48 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3597 ms
2025-08-16 06:00:48 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 06:00:49 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 06:00:49 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 06:00:49 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 06:00:50 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 06:00:50 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 06:00:50 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14d6594b
2025-08-16 06:00:50 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 06:00:50 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 06:00:52 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 06:00:52 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:00:53 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 06:00:53 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 06:00:53 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowired annotation is not supported on static fields: private static com.saiDeveloper.Spring_Boot_Starter_Template.repo.MarkdownRepo com.saiDeveloper.Spring_Boot_Starter_Template.service.MarkdownService.repo
2025-08-16 06:00:53 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 06:00:54 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 06:00:54 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 06:00:54 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 06:00:54 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Started SpringBootStarterTemplateApplication in 10.783 seconds (process running for 12.129)
2025-08-16 06:01:36 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 06:01:36 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 06:01:36 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:01:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 06:01:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 06:01:42 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 06:01:43 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Starting SpringBootStarterTemplateApplication using Java 17.0.10 with PID 7724 (C:\Users\dsai9\Projects\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView)
2025-08-16 06:01:43 [restartedMain] DEBUG c.s.S.SpringBootStarterTemplateApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 06:01:43 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-16 06:01:43 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 06:01:43 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 06:01:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 06:01:44 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 2 JPA repository interfaces.
2025-08-16 06:01:46 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 06:01:46 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 06:01:46 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 06:01:46 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 06:01:46 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 06:01:46 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3346 ms
2025-08-16 06:01:46 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 06:01:46 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 06:01:47 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 06:01:47 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 06:01:47 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 06:01:47 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 06:01:48 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b43ff0c
2025-08-16 06:01:48 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 06:01:48 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 06:01:50 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 06:01:50 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:01:51 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 06:01:51 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 06:01:51 [restartedMain] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor - Autowired annotation is not supported on static fields: private static com.saiDeveloper.Spring_Boot_Starter_Template.repo.MarkdownRepo com.saiDeveloper.Spring_Boot_Starter_Template.service.MarkdownService.repo
2025-08-16 06:01:51 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 06:01:52 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 06:01:52 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 06:01:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 06:01:52 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Started SpringBootStarterTemplateApplication in 10.031 seconds (process running for 11.322)
2025-08-16 06:02:14 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 06:02:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 06:02:14 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-16 06:02:14 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-08-16 06:02:20 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "com.saiDeveloper.Spring_Boot_Starter_Template.repo.MarkdownRepo.findAll()" because "com.saiDeveloper.Spring_Boot_Starter_Template.service.MarkdownService.repo" is null] with root cause
java.lang.NullPointerException: Cannot invoke "com.saiDeveloper.Spring_Boot_Starter_Template.repo.MarkdownRepo.findAll()" because "com.saiDeveloper.Spring_Boot_Starter_Template.service.MarkdownService.repo" is null
	at com.saiDeveloper.Spring_Boot_Starter_Template.service.MarkdownService.fetchAllMarkdowns(MarkdownService.java:25)
	at com.saiDeveloper.Spring_Boot_Starter_Template.controller.MarkController.fetchAllMarkdowns(MarkController.java:40)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:257)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.saiDeveloper.Spring_Boot_Starter_Template.config.JwtFilter.doFilterInternal(JwtFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-16 06:03:15 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 06:03:15 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 06:03:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:03:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 06:03:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 06:03:22 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 06:03:22 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Starting SpringBootStarterTemplateApplication using Java 17.0.10 with PID 16688 (C:\Users\dsai9\Projects\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView)
2025-08-16 06:03:22 [restartedMain] DEBUG c.s.S.SpringBootStarterTemplateApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 06:03:22 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-16 06:03:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 06:03:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 06:03:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 06:03:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 139 ms. Found 2 JPA repository interfaces.
2025-08-16 06:03:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 06:03:26 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 06:03:26 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 06:03:26 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 06:03:26 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 06:03:26 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3500 ms
2025-08-16 06:03:26 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 06:03:26 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 06:03:26 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 06:03:26 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 06:03:27 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 06:03:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 06:03:28 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b43ff0c
2025-08-16 06:03:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 06:03:28 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 06:03:30 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 06:03:30 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:03:31 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 06:03:31 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 06:03:31 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 06:03:32 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 06:03:32 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 06:03:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 06:03:32 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Started SpringBootStarterTemplateApplication in 10.643 seconds (process running for 11.983)
2025-08-16 06:03:34 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 06:03:34 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 06:03:34 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-16 06:24:46 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 06:24:46 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 06:24:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:24:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 06:24:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 06:31:35 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 06:31:35 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Starting SpringBootStarterTemplateApplication using Java 17.0.10 with PID 15788 (C:\Users\dsai9\Projects\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView)
2025-08-16 06:31:35 [restartedMain] DEBUG c.s.S.SpringBootStarterTemplateApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 06:31:35 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-16 06:31:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 06:31:35 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 06:31:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 06:31:37 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 113 ms. Found 2 JPA repository interfaces.
2025-08-16 06:31:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 06:31:38 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 06:31:38 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 06:31:38 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 06:31:38 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 06:31:38 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3431 ms
2025-08-16 06:31:38 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 06:31:39 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 06:31:39 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 06:31:39 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 06:31:40 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 06:31:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 06:31:40 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14d937f9
2025-08-16 06:31:40 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 06:31:40 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 06:31:42 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 06:31:42 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:31:43 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 06:31:43 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 06:31:43 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 06:31:44 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 06:31:44 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 06:31:44 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 06:31:44 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Started SpringBootStarterTemplateApplication in 10.075 seconds (process running for 11.617)
2025-08-16 06:32:16 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 06:32:17 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 06:32:17 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:32:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 06:32:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 06:32:23 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 06:32:23 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Starting SpringBootStarterTemplateApplication using Java 17.0.10 with PID 3712 (C:\Users\dsai9\Projects\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView)
2025-08-16 06:32:23 [restartedMain] DEBUG c.s.S.SpringBootStarterTemplateApplication - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 06:32:23 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-16 06:32:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 06:32:24 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 06:32:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 06:32:25 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 118 ms. Found 2 JPA repository interfaces.
2025-08-16 06:32:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 06:32:27 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 06:32:27 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 06:32:27 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 06:32:27 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 06:32:27 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3665 ms
2025-08-16 06:32:27 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 06:32:28 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 06:32:28 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 06:32:28 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 06:32:28 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 06:32:28 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 06:32:29 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@412069a
2025-08-16 06:32:29 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 06:32:29 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 06:32:31 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 06:32:31 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:32:32 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 06:32:32 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 06:32:32 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 06:32:33 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 06:32:33 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 06:32:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 06:32:33 [restartedMain] INFO  c.s.S.SpringBootStarterTemplateApplication - Started SpringBootStarterTemplateApplication in 10.793 seconds (process running for 12.323)
2025-08-16 06:33:12 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 06:33:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 06:33:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-16 06:33:12 [http-nio-8080-exec-1] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 06:33:12 [http-nio-8080-exec-1] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 06:33:12 [http-nio-8080-exec-1] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 06:33:12 [http-nio-8080-exec-1] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 06:33:12 [http-nio-8080-exec-1] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 06:34:13 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 06:34:13 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 06:34:13 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 06:34:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 06:34:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 08:01:55 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 08:01:55 [restartedMain] INFO  c.s.S.MarkView - Starting MarkView using Java 17.0.10 with PID 16600 (C:\Users\dsai9\Projects\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView)
2025-08-16 08:01:55 [restartedMain] DEBUG c.s.S.MarkView - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 08:01:55 [restartedMain] INFO  c.s.S.MarkView - No active profile set, falling back to 1 default profile: "default"
2025-08-16 08:01:55 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 08:01:55 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 08:01:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 08:01:56 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 2 JPA repository interfaces.
2025-08-16 08:01:57 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 08:01:57 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 08:01:57 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 08:01:57 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 08:01:57 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 08:01:57 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1701 ms
2025-08-16 08:01:57 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 08:01:57 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 08:01:57 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 08:01:57 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 08:01:58 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 08:01:58 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 08:01:58 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7cfa42f3
2025-08-16 08:01:58 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 08:01:58 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 08:01:59 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 08:01:59 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 08:01:59 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 08:01:59 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 08:01:59 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 08:02:00 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 08:02:00 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 08:02:00 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 08:02:00 [restartedMain] INFO  c.s.S.MarkView - Started MarkView in 5.014 seconds (process running for 5.679)
2025-08-16 08:02:21 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 08:02:21 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 08:02:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 08:02:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 08:02:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 10:22:51 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 10:22:51 [restartedMain] INFO  c.s.S.MarkView - Starting MarkView using Java 17.0.10 with PID 19092 (C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView)
2025-08-16 10:22:51 [restartedMain] DEBUG c.s.S.MarkView - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 10:22:51 [restartedMain] INFO  c.s.S.MarkView - No active profile set, falling back to 1 default profile: "default"
2025-08-16 10:22:51 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 10:22:51 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 10:22:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 10:22:53 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 2 JPA repository interfaces.
2025-08-16 10:22:55 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 10:22:55 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 10:22:55 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 10:22:55 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 10:22:55 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 10:22:55 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3683 ms
2025-08-16 10:22:55 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 10:22:55 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 10:22:56 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 10:22:56 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 10:22:56 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 10:22:57 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 10:22:57 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@32514563
2025-08-16 10:22:57 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 10:22:57 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 10:22:59 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 10:22:59 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 10:23:00 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 10:23:00 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 10:23:00 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 10:23:01 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 10:23:01 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 10:23:01 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 10:23:01 [restartedMain] INFO  c.s.S.MarkView - Started MarkView in 10.437 seconds (process running for 12.077)
2025-08-16 10:23:25 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 10:23:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 10:23:25 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-16 10:24:21 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 10:24:21 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 10:24:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 10:24:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 10:24:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 10:24:30 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 10:24:30 [restartedMain] INFO  c.s.S.MarkView - Starting MarkView using Java 17.0.10 with PID 14944 (C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView)
2025-08-16 10:24:30 [restartedMain] DEBUG c.s.S.MarkView - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 10:24:30 [restartedMain] INFO  c.s.S.MarkView - No active profile set, falling back to 1 default profile: "default"
2025-08-16 10:24:30 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 10:24:30 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 10:24:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 10:24:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114 ms. Found 2 JPA repository interfaces.
2025-08-16 10:24:33 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 10:24:33 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 10:24:33 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 10:24:33 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 10:24:34 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 10:24:34 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3373 ms
2025-08-16 10:24:34 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 10:24:34 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 10:24:34 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 10:24:34 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 10:24:35 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 10:24:35 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 10:24:35 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b9d72cc
2025-08-16 10:24:35 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 10:24:35 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 10:24:38 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 10:24:38 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 10:24:38 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 10:24:38 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 10:24:39 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 10:24:40 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 10:24:40 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 10:24:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 10:24:40 [restartedMain] INFO  c.s.S.MarkView - Started MarkView in 10.433 seconds (process running for 11.958)
2025-08-16 10:24:45 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 10:24:45 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 10:24:45 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-16 10:24:45 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'file' is not present.]
2025-08-16 10:29:03 [http-nio-8080-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'file' is not present.]
2025-08-16 10:30:55 [http-nio-8080-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'file' is not present.]
2025-08-16 10:31:20 [http-nio-8080-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'file' is not present.]
2025-08-16 10:32:49 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.multipart.MultipartException: Failed to parse multipart servlet request] with root cause
org.apache.tomcat.util.http.fileupload.FileUploadException: the request was rejected because no multipart boundary was found
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.init(FileItemIteratorImpl.java:189)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.getMultiPartStream(FileItemIteratorImpl.java:205)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.findNextItem(FileItemIteratorImpl.java:224)
	at org.apache.tomcat.util.http.fileupload.impl.FileItemIteratorImpl.<init>(FileItemIteratorImpl.java:142)
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.getItemIterator(FileUploadBase.java:252)
	at org.apache.tomcat.util.http.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:276)
	at org.apache.catalina.connector.Request.parseParts(Request.java:2588)
	at org.apache.catalina.connector.Request.getParts(Request.java:2488)
	at org.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:773)
	at jakarta.servlet.http.HttpServletRequestWrapper.getParts(HttpServletRequestWrapper.java:315)
	at jakarta.servlet.http.HttpServletRequestWrapper.getParts(HttpServletRequestWrapper.java:315)
	at jakarta.servlet.http.HttpServletRequestWrapper.getParts(HttpServletRequestWrapper.java:315)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.parseRequest(StandardMultipartHttpServletRequest.java:95)
	at org.springframework.web.multipart.support.StandardMultipartHttpServletRequest.<init>(StandardMultipartHttpServletRequest.java:88)
	at org.springframework.web.multipart.support.StandardServletMultipartResolver.resolveMultipart(StandardServletMultipartResolver.java:112)
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1227)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.saiDeveloper.Spring_Boot_Starter_Template.config.JwtFilter.doFilterInternal(JwtFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-16 11:29:11 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=55m35s933ms24µs500ns).
2025-08-16 11:34:32 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'file' is not present.]
2025-08-16 11:38:17 [http-nio-8080-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'file' is not present.]
2025-08-16 11:41:41 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 11:41:42 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 11:41:42 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 11:41:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 11:41:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 11:41:51 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 11:41:51 [restartedMain] INFO  c.s.S.MarkView - Starting MarkView using Java 17.0.10 with PID 21596 (C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView)
2025-08-16 11:41:51 [restartedMain] DEBUG c.s.S.MarkView - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 11:41:51 [restartedMain] INFO  c.s.S.MarkView - No active profile set, falling back to 1 default profile: "default"
2025-08-16 11:41:52 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 11:41:52 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 11:41:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 11:41:54 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 141 ms. Found 2 JPA repository interfaces.
2025-08-16 11:41:56 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 11:41:56 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 11:41:56 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 11:41:56 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 11:41:56 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 11:41:56 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4516 ms
2025-08-16 11:41:56 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 11:41:57 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 11:41:57 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 11:41:57 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 11:41:58 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 11:41:58 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 11:41:59 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2dd1d286
2025-08-16 11:41:59 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 11:41:59 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 11:42:01 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 11:42:01 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 11:42:02 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 11:42:02 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 11:42:02 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 11:42:04 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 11:42:04 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 11:42:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 11:42:04 [restartedMain] INFO  c.s.S.MarkView - Started MarkView in 13.079 seconds (process running for 15.034)
2025-08-16 11:42:04 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 11:42:04 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 11:42:04 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-16 11:42:05 [http-nio-8080-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required part 'file' is not present.]
2025-08-16 11:56:20 [http-nio-8080-exec-2] INFO  c.s.S.controller.MarkController - filename:readme.MD
2025-08-16 11:56:20 [http-nio-8080-exec-2] INFO  c.s.S.controller.MarkController - Content:# Spring Boot Auth Template

This Spring Boot template provides a ready-to-use authentication system with various configurations. Below are the key features:

## Features

### 1. JWT-based Authentication
- Secure authentication using JSON Web Tokens (JWT)
- Custom JWT filter implementation
- Spring Security configuration for protected endpoints

### 2. Request Validation
- Integrated Hibernate Validator for request validation
- Automatic validation of request bodies
- Built-in validation annotations support

### 3. Development Tools
- Lombok integration for reduced boilerplate code
- Spring Boot DevTools for automatic restarts and enhanced development experience

### 4. Database Configuration
- Configured to connect to PostgreSQL database
- Change the database connection properties in `application.properties` according to your setup

### 5. Logging Configuration
- Logback configuration for systematic logging
- Log files are saved after each application initialization
- Log file configuration can be found in `logback.xml`

## Getting Started
1. Clone this repository
2. Configure your PostgreSQL database connection in `application.properties`
3. Build the project using Maven: `mvn clean install`
4. Run the application: `mvn spring-boot:run`

## Note
Make sure to update the database configuration in `application.properties` according to your PostgreSQL setup before running the application.
2025-08-16 11:59:30 [http-nio-8080-exec-4] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 11:59:30 [http-nio-8080-exec-4] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:09:13 [http-nio-8080-exec-6] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:09:13 [http-nio-8080-exec-6] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:11:12 [http-nio-8080-exec-8] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:11:12 [http-nio-8080-exec-8] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:14:22 [http-nio-8080-exec-10] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:14:22 [http-nio-8080-exec-10] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:14:33 [http-nio-8080-exec-2] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:14:33 [http-nio-8080-exec-2] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:20:34 [http-nio-8080-exec-4] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:20:34 [http-nio-8080-exec-4] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:25:31 [http-nio-8080-exec-6] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:25:31 [http-nio-8080-exec-6] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:25:33 [http-nio-8080-exec-7] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 12:25:33 [http-nio-8080-exec-7] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 12:25:34 [http-nio-8080-exec-7] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 12:25:34 [http-nio-8080-exec-7] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 12:25:34 [http-nio-8080-exec-7] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 12:27:20 [http-nio-8080-exec-9] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:27:20 [http-nio-8080-exec-9] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:27:26 [http-nio-8080-exec-10] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 12:27:26 [http-nio-8080-exec-10] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 12:27:26 [http-nio-8080-exec-10] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 12:27:26 [http-nio-8080-exec-10] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 12:27:26 [http-nio-8080-exec-10] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 12:32:26 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 12:32:26 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 12:32:26 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 12:32:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 12:32:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 12:32:38 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 12:32:38 [restartedMain] INFO  c.s.S.MarkView - Starting MarkView using Java 17.0.10 with PID 21696 (C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView)
2025-08-16 12:32:38 [restartedMain] DEBUG c.s.S.MarkView - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 12:32:38 [restartedMain] INFO  c.s.S.MarkView - No active profile set, falling back to 1 default profile: "default"
2025-08-16 12:32:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 12:32:38 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 12:32:39 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 12:32:40 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 133 ms. Found 2 JPA repository interfaces.
2025-08-16 12:32:41 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 12:32:41 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 12:32:41 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 12:32:41 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 12:32:41 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 12:32:41 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3512 ms
2025-08-16 12:32:41 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 12:32:42 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 12:32:42 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 12:32:42 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 12:32:43 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 12:32:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 12:32:43 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7595f0f
2025-08-16 12:32:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 12:32:43 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 12:32:45 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 12:32:45 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 12:32:46 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 12:32:46 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 12:32:46 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 12:32:47 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 12:32:47 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 12:32:47 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 12:32:47 [restartedMain] INFO  c.s.S.MarkView - Started MarkView in 10.313 seconds (process running for 12.059)
2025-08-16 12:33:13 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 12:33:13 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 12:33:13 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-16 12:33:13 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:33:13 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:33:16 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 12:33:16 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 12:33:16 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 12:33:16 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 12:33:16 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 12:45:38 [http-nio-8080-exec-3] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:45:38 [http-nio-8080-exec-3] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:45:41 [http-nio-8080-exec-5] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 12:45:41 [http-nio-8080-exec-5] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 12:45:41 [http-nio-8080-exec-5] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 12:45:41 [http-nio-8080-exec-5] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 12:45:41 [http-nio-8080-exec-5] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 12:52:27 [http-nio-8080-exec-7] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:52:27 [http-nio-8080-exec-7] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:53:17 [http-nio-8080-exec-9] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:53:17 [http-nio-8080-exec-9] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:54:18 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 12:54:18 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 12:54:20 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 12:54:21 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 12:54:21 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 12:54:21 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 12:54:21 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 12:56:19 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 12:56:19 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 12:56:19 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 12:56:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 12:56:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 15:04:28 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 15:04:28 [restartedMain] INFO  c.s.S.MarkView - Starting MarkView using Java 17.0.10 with PID 14644 (C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView)
2025-08-16 15:04:28 [restartedMain] DEBUG c.s.S.MarkView - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 15:04:28 [restartedMain] INFO  c.s.S.MarkView - No active profile set, falling back to 1 default profile: "default"
2025-08-16 15:04:29 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 15:04:29 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 15:04:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 15:04:31 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 141 ms. Found 2 JPA repository interfaces.
2025-08-16 15:04:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 15:04:33 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 15:04:33 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 15:04:33 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 15:04:33 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 15:04:33 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4163 ms
2025-08-16 15:04:33 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 15:04:33 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 15:04:33 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 15:04:33 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 15:04:34 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 15:04:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 15:04:34 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1da9b6d3
2025-08-16 15:04:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 15:04:35 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 15:04:37 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 15:04:37 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 15:04:37 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 15:04:37 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 15:04:37 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 15:04:38 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 15:04:38 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 15:04:38 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 15:04:38 [restartedMain] INFO  c.s.S.MarkView - Started MarkView in 10.834 seconds (process running for 12.824)
2025-08-16 15:05:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 15:05:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 15:05:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-16 15:05:34 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 15:05:34 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 15:05:37 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 15:05:37 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 15:05:37 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 15:05:37 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 15:05:37 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 15:09:01 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 15:09:01 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 15:09:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 15:09:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 15:09:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 17:21:21 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 17:21:22 [restartedMain] INFO  c.s.S.MarkView - Starting MarkView using Java 17.0.10 with PID 424 (C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView)
2025-08-16 17:21:22 [restartedMain] DEBUG c.s.S.MarkView - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 17:21:22 [restartedMain] INFO  c.s.S.MarkView - No active profile set, falling back to 1 default profile: "default"
2025-08-16 17:21:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 17:21:22 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 17:21:23 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 17:21:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 2 JPA repository interfaces.
2025-08-16 17:21:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 17:21:25 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 17:21:25 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 17:21:25 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 17:21:25 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 17:21:25 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3463 ms
2025-08-16 17:21:25 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 17:21:26 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 17:21:26 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 17:21:26 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 17:21:27 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 17:21:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 17:21:27 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2dd1d286
2025-08-16 17:21:27 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 17:21:27 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 17:21:29 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 17:21:29 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 17:21:30 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 17:21:30 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 17:21:30 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 17:21:31 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 17:21:31 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 17:21:31 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 17:21:31 [restartedMain] INFO  c.s.S.MarkView - Started MarkView in 10.506 seconds (process running for 12.154)
2025-08-16 17:21:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 17:21:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 17:21:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-16 17:21:44 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 17:21:44 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 17:21:49 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 17:21:50 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 17:21:50 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 17:21:50 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 17:21:50 [http-nio-8080-exec-2] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 17:25:51 [http-nio-8080-exec-4] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 17:25:51 [http-nio-8080-exec-4] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 17:29:43 [http-nio-8080-exec-6] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 17:29:43 [http-nio-8080-exec-6] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 17:29:48 [http-nio-8080-exec-8] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 17:29:48 [http-nio-8080-exec-8] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 17:29:48 [http-nio-8080-exec-8] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 17:29:48 [http-nio-8080-exec-8] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 17:29:48 [http-nio-8080-exec-8] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 17:32:11 [http-nio-8080-exec-10] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 17:32:11 [http-nio-8080-exec-10] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 17:32:13 [http-nio-8080-exec-9] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 17:32:13 [http-nio-8080-exec-9] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 17:32:13 [http-nio-8080-exec-9] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 17:32:13 [http-nio-8080-exec-9] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 17:32:13 [http-nio-8080-exec-9] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 17:35:52 [http-nio-8080-exec-2] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 17:35:52 [http-nio-8080-exec-2] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 17:35:53 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 17:35:53 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 17:35:53 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 17:35:53 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 17:35:53 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

2025-08-16 17:37:57 [http-nio-8080-exec-5] INFO  c.s.S.controller.MarkController - filename:readme.MD
2025-08-16 17:37:57 [http-nio-8080-exec-5] INFO  c.s.S.controller.MarkController - Content:# Spring Boot Auth Template

This Spring Boot template provides a ready-to-use authentication system with various configurations. Below are the key features:

## Features

### 1. JWT-based Authentication
- Secure authentication using JSON Web Tokens (JWT)
- Custom JWT filter implementation
- Spring Security configuration for protected endpoints

### 2. Request Validation
- Integrated Hibernate Validator for request validation
- Automatic validation of request bodies
- Built-in validation annotations support

### 3. Development Tools
- Lombok integration for reduced boilerplate code
- Spring Boot DevTools for automatic restarts and enhanced development experience

### 4. Database Configuration
- Configured to connect to PostgreSQL database
- Change the database connection properties in `application.properties` according to your setup

### 5. Logging Configuration
- Logback configuration for systematic logging
- Log files are saved after each application initialization
- Log file configuration can be found in `logback.xml`

## Getting Started
1. Clone this repository
2. Configure your PostgreSQL database connection in `application.properties`
3. Build the project using Maven: `mvn clean install`
4. Run the application: `mvn spring-boot:run`

## Note
Make sure to update the database configuration in `application.properties` according to your PostgreSQL setup before running the application.
2025-08-16 17:37:58 [http-nio-8080-exec-6] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 17:37:58 [http-nio-8080-exec-6] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 17:37:58 [http-nio-8080-exec-6] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 17:37:58 [http-nio-8080-exec-6] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 17:37:58 [http-nio-8080-exec-6] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>Spring Boot Auth Template</h1>
<p>This Spring Boot template provides a ready-to-use authentication system with various configurations. Below are the key features:</p>
<h2>Features</h2>
<h3>1. JWT-based Authentication</h3>
<ul>
<li>Secure authentication using JSON Web Tokens (JWT)</li>
<li>Custom JWT filter implementation</li>
<li>Spring Security configuration for protected endpoints</li>
</ul>
<h3>2. Request Validation</h3>
<ul>
<li>Integrated Hibernate Validator for request validation</li>
<li>Automatic validation of request bodies</li>
<li>Built-in validation annotations support</li>
</ul>
<h3>3. Development Tools</h3>
<ul>
<li>Lombok integration for reduced boilerplate code</li>
<li>Spring Boot DevTools for automatic restarts and enhanced development experience</li>
</ul>
<h3>4. Database Configuration</h3>
<ul>
<li>Configured to connect to PostgreSQL database</li>
<li>Change the database connection properties in <code>application.properties</code> according to your setup</li>
</ul>
<h3>5. Logging Configuration</h3>
<ul>
<li>Logback configuration for systematic logging</li>
<li>Log files are saved after each application initialization</li>
<li>Log file configuration can be found in <code>logback.xml</code></li>
</ul>
<h2>Getting Started</h2>
<ol>
<li>Clone this repository</li>
<li>Configure your PostgreSQL database connection in <code>application.properties</code></li>
<li>Build the project using Maven: <code>mvn clean install</code></li>
<li>Run the application: <code>mvn spring-boot:run</code></li>
</ol>
<h2>Note</h2>
<p>Make sure to update the database configuration in <code>application.properties</code> according to your PostgreSQL setup before running the application.</p>

2025-08-16 17:38:58 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-16 17:38:58 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-16 17:38:58 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 17:38:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-16 17:38:58 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-16 20:20:30 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.2.Final
2025-08-16 20:20:30 [restartedMain] INFO  c.s.S.MarkView - Starting MarkView using Java 17.0.10 with PID 15520 (C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView\target\classes started by dsai9 in C:\Users\dsai9\Projects\MarkView - Angular+Springboot\MarkView)
2025-08-16 20:20:30 [restartedMain] DEBUG c.s.S.MarkView - Running with Spring Boot v3.4.2, Spring v6.2.2
2025-08-16 20:20:30 [restartedMain] INFO  c.s.S.MarkView - No active profile set, falling back to 1 default profile: "default"
2025-08-16 20:20:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-08-16 20:20:31 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-08-16 20:20:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-16 20:20:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 129 ms. Found 2 JPA repository interfaces.
2025-08-16 20:20:34 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-16 20:20:34 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-16 20:20:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-16 20:20:34 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-08-16 20:20:34 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-16 20:20:34 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3932 ms
2025-08-16 20:20:35 [restartedMain] DEBUG c.s.S.config.JwtFilter - Filter 'jwtFilter' configured for use
2025-08-16 20:20:35 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-16 20:20:35 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-08-16 20:20:35 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-16 20:20:36 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-16 20:20:36 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-16 20:20:37 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@a0f057c
2025-08-16 20:20:37 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-16 20:20:37 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-16 20:20:39 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-16 20:20:39 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-16 20:20:40 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authProvider
2025-08-16 20:20:40 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-16 20:20:40 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-16 20:20:41 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-08-16 20:20:41 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-16 20:20:41 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-16 20:20:41 [restartedMain] INFO  c.s.S.MarkView - Started MarkView in 11.831 seconds (process running for 13.623)
2025-08-16 20:22:36 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-16 20:22:36 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-16 20:22:36 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 60 ms
2025-08-16 20:22:36 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - filename:test.md
2025-08-16 20:22:36 [http-nio-8080-exec-1] INFO  c.s.S.controller.MarkController - Content:# 🚀 Introduction to Spring Boot

Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.

## 🌟 Features

- **Auto Configuration**: Automatically configures your application based on the dependencies you add.
- **Embedded Servers**: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.
- **Production Ready**: Includes metrics, health checks, and externalized configuration.
- **Opinionated Defaults**: Reduces boilerplate and speeds up development.

## 🛠️ Getting Started

To create a Spring Boot application, you can use [Spring Initializr](https://start.spring.io/):

```bash
curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip
2025-08-16 20:22:40 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Service convertMdToHTML
2025-08-16 20:22:41 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Markdown fetched successfully
2025-08-16 20:22:41 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Parser and renderer built successfully
2025-08-16 20:22:41 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Markdown parsed successfully
2025-08-16 20:22:41 [http-nio-8080-exec-3] INFO  c.s.S.service.MarkdownService - Markdown converted to html successfully/n <h1>🚀 Introduction to Spring Boot</h1>
<p>Spring Boot is an open-source Java-based framework used to create stand-alone, production-grade Spring applications with minimal configuration.</p>
<h2>🌟 Features</h2>
<ul>
<li><strong>Auto Configuration</strong>: Automatically configures your application based on the dependencies you add.</li>
<li><strong>Embedded Servers</strong>: Comes with embedded Tomcat, Jetty, or Undertow—no need for external deployment.</li>
<li><strong>Production Ready</strong>: Includes metrics, health checks, and externalized configuration.</li>
<li><strong>Opinionated Defaults</strong>: Reduces boilerplate and speeds up development.</li>
</ul>
<h2>🛠️ Getting Started</h2>
<p>To create a Spring Boot application, you can use <a href="https://start.spring.io/">Spring Initializr</a>:</p>
<pre><code class="language-bash">curl https://start.spring.io/starter.zip \
  -d dependencies=web \
  -d name=demo \
  -o demo.zip</code></pre>

